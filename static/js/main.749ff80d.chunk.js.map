{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","setMovie","error","setError","loading","setLoading","inputTitle","setInputTitle","useEffect","onSubmit","event","query","preventDefault","fetch","then","res","json","catch","Response","Error","response","trim","Title","Plot","Poster","imdbID","finally","htmlFor","value","type","id","placeholder","classnames","onChange","target","disabled","onClick","App","setMovies","prevState","some","ReactDOM","render","document","getElementById"],"mappings":"8TAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,wBCHZ,IAAMC,EAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAA0BD,oBAAS,GAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAoCL,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAkCAC,qBAAU,cAEP,IAOH,OACE,qCACE,uBAAMC,SAnCgB,SAACC,GCpBtB,IAAkBC,EDqBrBD,EAAME,iBACNP,GAAW,ICtBUM,EDwBZL,ECvBJO,MAAM,GAAD,OAHE,sDAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,wBDoBNL,MAAK,SAACM,GACL,GAAI,UAAWA,IAAad,EAAWe,OACrC,MAAM,IAAIF,MAGZlB,EAAS,CACPX,MAAO8B,EAASE,MAChB/B,YAAa6B,EAASG,KACtBnC,OAA4B,QAApBgC,EAASI,OACb,4DACAJ,EAASI,OACb/B,QAAQ,8BAAD,OAAgC2B,EAASK,QAChD5B,OAAQuB,EAASK,YAGpBR,OAAM,kBAAMd,GAAS,MACrBuB,SAAQ,kBAAMrB,GAAW,OAcSnB,UAAU,aAA7C,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQyC,QAAQ,cAAjC,yBAIA,qBAAKzC,UAAU,UAAf,SACE,uBACE,UAAQ,aACR0C,MAAOtB,EACPuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7C,UAAW8C,IAAW,QAAS,CAAE,YAAa9B,IAC9C+B,SArBc,SAACvB,GACzBP,GAAS,GACTI,EAAcG,EAAMwB,OAAON,YAuBpB1B,GACC,mBAAGhB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2C,KAAK,SACL3C,UAAW8C,IACT,SACA,WACA,CAAE,aAAc5B,IAElB+B,UAAW7B,GAAcF,EAR3B,SAUInB,EAAyB,eAAjB,mBAIbA,GACC,qBAAKC,UAAU,UAAf,SACE,wBACE,UAAQ,YACR2C,KAAK,SACL3C,UAAU,oBACVkD,QA1FI,WACZnD,IACFc,EAAWd,GACXsB,EAAc,IACdN,EAAS,QAkFD,qCAcPhB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WElHfoD,EAAM,WACjB,MAA4BrC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe2C,EAAf,KAcA,OACE,sBAAKpD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWa,WAnBM,SAACd,GACtBqD,GAAU,SAAAC,GAGR,OAFiBA,EAAUC,MAAK,qBAAG3C,SAAwBZ,EAAMY,UAGxD0C,EAGH,GAAN,mBAAWA,GAAX,CAAsBtD,gBCb5BwD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.749ff80d.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport './FindMovie.scss';\nimport classnames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [inputTitle, setInputTitle] = useState('');\n\n  const handleAdd = () => {\n    if (movie) {\n      onAddMovie(movie);\n      setInputTitle('');\n      setMovie(null);\n    }\n  };\n\n  const handleSearchMovie = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(inputTitle)\n      .then((response) => {\n        if ('Error' in response || !inputTitle.trim()) {\n          throw new Error();\n        }\n\n        setMovie({\n          title: response.Title,\n          description: response.Plot,\n          imgUrl: response.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : response.Poster,\n          imdbUrl: `https://www.imdb.com/title/${response.imdbID}`,\n          imdbId: response.imdbID,\n        });\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n\n  }, []);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setError(false);\n    setInputTitle(event.target.value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSearchMovie} className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              value={inputTitle}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames('input', { 'is-danger': error })}\n              onChange={handleChangeTitle}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classnames(\n                'button',\n                'is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={!inputTitle || loading}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=fa050242';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie:Movie) => {\n    setMovies(prevState => {\n      const isSameId = prevState.some(({ imdbId }) => imdbId === movie.imdbId);\n\n      if (isSameId) {\n        return prevState;\n      }\n\n      return [...prevState, movie];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}